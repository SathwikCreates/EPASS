// routes/api.js
const express = require('express');
const router = express.Router();

// Temporary in-memory storage for users and leave requests
const users = [];
const leaveRequests = [];

// Helper function to find user by email
function findUserByEmail(email) {
  return users.find(user => user.email === email);
}

// Sign up route - Adds a new user (student or teacher)
router.post('/signup', (req, res) => {
  const { name, email, password, role } = req.body;
  
  // Check if user already exists
  if (findUserByEmail(email)) {
    return res.status(400).json({ message: 'User already exists with this email!' });
  }

  // Add the new user
  const newUser = { id: users.length + 1, name, email, password, role };
  users.push(newUser);

  res.status(200).json({ message: `Signed up successfully as ${name} (${role})!` });
});

// Login route - Authenticates an existing user
router.post('/login', (req, res) => {
  const { email, password } = req.body;

  const user = findUserByEmail(email);
  
  if (!user || user.password !== password) {
    return res.status(400).json({ message: 'Invalid email or password' });
  }

  // Send back the logged-in user data
  res.status(200).json({ user });
});

// Leave request route - Allows students to submit leave requests
router.post('/leave-request', (req, res) => {
  const { userId, reason, date } = req.body;

  // Ensure the user exists
  const user = users.find(user => user.id === userId);
  if (!user) {
    return res.status(400).json({ message: 'User not found' });
  }

  // Save leave request
  const newLeaveRequest = { userId, reason, date, status: 'Pending' };
  leaveRequests.push(newLeaveRequest);

  res.status(200).json({ message: 'Leave request submitted successfully' });
});

// Get pending leave requests for teachers
router.get('/leave-requests', (req, res) => {
  const pendingRequests = leaveRequests.filter(request => request.status === 'Pending');
  res.status(200).json(pendingRequests);
});

// Approve leave request
router.post('/approve-leave', (req, res) => {
  const { requestId } = req.body;
  const leaveRequest = leaveRequests.find(request => request.id === requestId);

  if (!leaveRequest) {
    return res.status(400).json({ message: 'Leave request not found' });
  }

  leaveRequest.status = 'Approved';
  res.status(200).json({ message: 'Leave request approved' });
});

// Decline leave request
router.post('/decline-leave', (req, res) => {
  const { requestId } = req.body;
  const leaveRequest = leaveRequests.find(request => request.id === requestId);

  if (!leaveRequest) {
    return res.status(400).json({ message: 'Leave request not found' });
  }

  leaveRequest.status = 'Rejected';
  res.status(200).json({ message: 'Leave request rejected' });
});

module.exports = router;
